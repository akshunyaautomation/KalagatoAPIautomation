<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="1" total="14" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="11303" started-at="2020-07-12T01:25:30 IST" finished-at="2020-07-12T01:25:42 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="11303" started-at="2020-07-12T01:25:30 IST" finished-at="2020-07-12T01:25:42 IST">
      <class name="TestApi.TestSuite">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="631" started-at="2020-07-12T01:25:32 IST" finished-at="2020-07-12T01:25:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="adminUserLogin(java.lang.String)[pri:1, instance:TestApi.TestSuite@80503]" name="adminUserLogin" duration-ms="2947" started-at="2020-07-12T01:25:32 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminUserLogin -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="238" started-at="2020-07-12T01:25:35 IST" finished-at="2020-07-12T01:25:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="adminVerifyRefreshToken(java.lang.String)[pri:2, instance:TestApi.TestSuite@80503]" name="adminVerifyRefreshToken" duration-ms="394" started-at="2020-07-12T01:25:35 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyRefreshToken -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:35 IST" finished-at="2020-07-12T01:25:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="110" started-at="2020-07-12T01:25:36 IST" finished-at="2020-07-12T01:25:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="adminVerifyGetMasterFilter(java.lang.String)[pri:3, instance:TestApi.TestSuite@80503]" name="adminVerifyGetMasterFilter" duration-ms="364" started-at="2020-07-12T01:25:36 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:36 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyGetMasterFilter -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:36 IST" finished-at="2020-07-12T01:25:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="91" started-at="2020-07-12T01:25:36 IST" finished-at="2020-07-12T01:25:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:36 IST" finished-at="2020-07-12T01:25:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="adminVerifyGetUserSegments(java.lang.String)[pri:4, instance:TestApi.TestSuite@80503]" name="adminVerifyGetUserSegments" duration-ms="314" started-at="2020-07-12T01:25:36 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyGetUserSegments -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="128" started-at="2020-07-12T01:25:37 IST" finished-at="2020-07-12T01:25:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="FAIL" signature="adminVerifyGetUserSegment(java.lang.String)[pri:5, instance:TestApi.TestSuite@80503]" name="adminVerifyGetUserSegment" duration-ms="329" started-at="2020-07-12T01:25:37 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:37 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at kalagato.user_segment.GetUserSegment.get_user_segment(GetUserSegment.java:11)
at TestApi.TestSuite.adminVerifyGetUserSegment(TestSuite.java:163)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyGetUserSegment -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:37 IST" finished-at="2020-07-12T01:25:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="125" started-at="2020-07-12T01:25:37 IST" finished-at="2020-07-12T01:25:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="1" started-at="2020-07-12T01:25:37 IST" finished-at="2020-07-12T01:25:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="adminVerifyCreateUserSegment(java.lang.String)[pri:6, instance:TestApi.TestSuite@80503]" name="adminVerifyCreateUserSegment" duration-ms="303" started-at="2020-07-12T01:25:37 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyCreateUserSegment -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="101" started-at="2020-07-12T01:25:38 IST" finished-at="2020-07-12T01:25:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="adminVerifyUpdateUserSegment(java.lang.String)[pri:7, instance:TestApi.TestSuite@80503]" name="adminVerifyUpdateUserSegment" duration-ms="287" started-at="2020-07-12T01:25:38 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyUpdateUserSegment -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:38 IST" finished-at="2020-07-12T01:25:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="75" started-at="2020-07-12T01:25:38 IST" finished-at="2020-07-12T01:25:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="1" started-at="2020-07-12T01:25:38 IST" finished-at="2020-07-12T01:25:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="adminVerifyDeleteUserSegment(java.lang.String)[pri:8, instance:TestApi.TestSuite@80503]" name="adminVerifyDeleteUserSegment" duration-ms="260" started-at="2020-07-12T01:25:38 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyDeleteUserSegment -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="108" started-at="2020-07-12T01:25:39 IST" finished-at="2020-07-12T01:25:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="1" started-at="2020-07-12T01:25:39 IST" finished-at="2020-07-12T01:25:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="adminVerifyChangePasswordFromApp(java.lang.String)[pri:9, instance:TestApi.TestSuite@80503]" name="adminVerifyChangePasswordFromApp" duration-ms="327" started-at="2020-07-12T01:25:39 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyChangePasswordFromApp -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="103" started-at="2020-07-12T01:25:39 IST" finished-at="2020-07-12T01:25:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="adminVerifyForgetPasswordRequest(java.lang.String)[pri:10, instance:TestApi.TestSuite@80503]" name="adminVerifyForgetPasswordRequest" duration-ms="281" started-at="2020-07-12T01:25:39 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyForgetPasswordRequest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:39 IST" finished-at="2020-07-12T01:25:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="79" started-at="2020-07-12T01:25:40 IST" finished-at="2020-07-12T01:25:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:40 IST" finished-at="2020-07-12T01:25:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="nonadminVerifyCreateUser(java.lang.String)[pri:12, instance:TestApi.TestSuite@80503]" name="nonadminVerifyCreateUser" duration-ms="374" started-at="2020-07-12T01:25:40 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nonadminVerifyCreateUser -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="428" started-at="2020-07-12T01:25:40 IST" finished-at="2020-07-12T01:25:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="1" started-at="2020-07-12T01:25:41 IST" finished-at="2020-07-12T01:25:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="userVerifyCreateUser(java.lang.String)[pri:12, instance:TestApi.TestSuite@80503]" name="userVerifyCreateUser" duration-ms="557" started-at="2020-07-12T01:25:41 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[get_master_filter is empty expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: get_master_filter is empty expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at TestApi.TestSuite.userVerifyCreateUser(TestSuite.java:229)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userVerifyCreateUser -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="90" started-at="2020-07-12T01:25:41 IST" finished-at="2020-07-12T01:25:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
        <test-method status="PASS" signature="adminVerifyLogError(java.lang.String)[pri:13, instance:TestApi.TestSuite@80503]" name="adminVerifyLogError" duration-ms="332" started-at="2020-07-12T01:25:41 IST" data-provider="DataProviderforTrigger" finished-at="2020-07-12T01:25:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminVerifyLogError -->
        <test-method status="PASS" signature="setup()[pri:0, instance:TestApi.TestSuite@80503]" name="setup" is-config="true" duration-ms="0" started-at="2020-07-12T01:25:41 IST" finished-at="2020-07-12T01:25:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UserLogout()[pri:0, instance:TestApi.TestSuite@80503]" name="UserLogout" is-config="true" duration-ms="113" started-at="2020-07-12T01:25:42 IST" finished-at="2020-07-12T01:25:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserLogout -->
      </class> <!-- TestApi.TestSuite -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
